<div id="app-aurora">
    <div class="pentagon"></div>
    <!-- <div class="circle place"></div> -->
    <!-- <div class="circle place-self-center"></div> -->
    <div class="triangle place-self-center"></div>
    <div class="circle place-self-end"></div>
</div>

<script>
    import { gsap } from "gsap";
    import { CustomEase } from "gsap/CustomEase";

    gsap.registerPlugin(CustomEase);

    const roll = gsap.utils.random;

    const rollX = roll(-6, 6, true);
    const rollY = roll(-6, 6, true);
    const rollRot = roll(0, 30, true);
    const rollScale = roll(0.9, 1.1, true);
    const rollOpacity = roll(0.08, 0.12, true);
    const rollDuration = roll(30, 50, true);
    const rollDelay = roll(-20, 0, true);

    function rollKeyframes(dices = 6) {
        const frames = [];

        for (let i = 0; i < dices; i++) {
            frames.push({
                x: `${rollX()}vw`,
                y: `${rollY()}vh`,
                rotation: rollRot(),
                scale: rollScale(),
            });
        }

        frames.push({
            x: 0,
            y: 0,
            rotation: 0,
            scale: 1,
        });

        return frames;
    }

    const targets = document.querySelectorAll("#app-aurora > *");

    targets.forEach((el) => {
        (el as HTMLElement).style.opacity = rollOpacity().toFixed(2);

        gsap.to(el, {
            keyframes: rollKeyframes(10),
            repeat: -1,
            duration: rollDuration(),
            delay: rollDelay(),
            ease: CustomEase.create("cubic", "M0,0 C0.77,0, 0.18,1, 1,1"),
        });
    });
</script>

<style>
    #app-aurora {
        position: fixed;
        z-index: var(--aurora-layer);
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;

        display: grid;

        > * {
            position: absolute;
            width: 36vw;
            aspect-ratio: 1;
            opacity: 0.1;

            /* background: linear-gradient(
                90deg,
                hsla(265, 53%, 29%, 1) 0%,
                hsla(24, 93%, 73%, 1) 100%
            ); */

            /* background: linear-gradient(
                90deg,
                hsla(164, 38%, 18%, 1) 0%,
                hsla(158, 77%, 77%, 1) 100%
            ); */

            background: linear-gradient(
                90deg,
                hsla(213, 77%, 14%, 1) 0%,
                hsla(202, 27%, 45%, 1) 100%
            );

            /* background: linear-gradient(
                to left,
                hsla(248, 21%, 15%, 1) 0%,
                hsla(250, 14%, 61%, 1) 100%
            ); */

            /* background: linear-gradient(
                90deg,
                hsla(155, 23%, 71%, 1) 0%,
                hsla(302, 17%, 32%, 1) 100%
            ); */
        }

        .pentagon {
            clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
        }

        .circle {
            border-radius: 50%;
        }

        .triangle {
            clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
        }

        .star {
            clip-path: polygon(
                50% 0%,
                61% 35%,
                98% 35%,
                68% 57%,
                79% 91%,
                50% 70%,
                21% 91%,
                32% 57%,
                2% 35%,
                39% 35%
            );
        }
    }

    :global(#app-main, #app-footer) {
        @apply backdrop-blur-[280px];
    }
</style>
